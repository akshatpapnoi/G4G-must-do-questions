Given an array A[] of integers, sort the array according to frequency of elements. That is elements that have higher frequency come first. If frequencies of two elements are same, then smaller number comes first.

Input:
The first line of input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the size of array. The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.

Output:
For each testcase, in a new line, print each sorted array in a seperate line. For each array its numbers should be seperated by space.


Solution:
-Store frequency of each element of A[] in a map.
-For each element in B[], print corresponding element in A[] its frequency times and delete element in A[].
-Print remaining elements of A[] their frequency times.



Code:

#include <bits/stdc++.h>
using namespace std;

int main() {
	//code
	int t;
	cin>>t;
	while(t--){
	    int n,m;
	    cin>>n>>m;
	    
	    map<int, int> z;
	    for(int i=0;i<n;i++){
	        int x;
	        cin>>x;
	        z[x] += 1;
	    }
	    
	    for(int i=0;i<m;i++){
	        int x;
	        cin>>x;
	        for(int j=0;j<z[x];j++)
	            cout<<x<<" ";
	        z.erase(x);
	    }
	    
	    for(auto i=z.begin();i!=z.end();i++){
	        for(int j=0;j<i->second;j++)
	            cout<<i->first<<" ";
	    }
	    
	    cout<<endl;
	   
	}
	return 0;
}
